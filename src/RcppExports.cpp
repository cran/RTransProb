// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// getTransitionProbability
Rcpp::List getTransitionProbability(arma::mat sampleTotals_totalsMat, arma::vec sampleTotals_totalsVec, String sampleTotals_methods, signed int snapshots, signed int interval);
RcppExport SEXP _RTransProb_getTransitionProbability(SEXP sampleTotals_totalsMatSEXP, SEXP sampleTotals_totalsVecSEXP, SEXP sampleTotals_methodsSEXP, SEXP snapshotsSEXP, SEXP intervalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type sampleTotals_totalsMat(sampleTotals_totalsMatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sampleTotals_totalsVec(sampleTotals_totalsVecSEXP);
    Rcpp::traits::input_parameter< String >::type sampleTotals_methods(sampleTotals_methodsSEXP);
    Rcpp::traits::input_parameter< signed int >::type snapshots(snapshotsSEXP);
    Rcpp::traits::input_parameter< signed int >::type interval(intervalSEXP);
    rcpp_result_gen = Rcpp::wrap(getTransitionProbability(sampleTotals_totalsMat, sampleTotals_totalsVec, sampleTotals_methods, snapshots, interval));
    return rcpp_result_gen;
END_RCPP
}
// getTransitionProbabilityTNH
Rcpp::List getTransitionProbabilityTNH(arma::mat sampleTotals_totalsMat, signed int snapshots, signed int interval);
RcppExport SEXP _RTransProb_getTransitionProbabilityTNH(SEXP sampleTotals_totalsMatSEXP, SEXP snapshotsSEXP, SEXP intervalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type sampleTotals_totalsMat(sampleTotals_totalsMatSEXP);
    Rcpp::traits::input_parameter< signed int >::type snapshots(snapshotsSEXP);
    Rcpp::traits::input_parameter< signed int >::type interval(intervalSEXP);
    rcpp_result_gen = Rcpp::wrap(getTransitionProbabilityTNH(sampleTotals_totalsMat, snapshots, interval));
    return rcpp_result_gen;
END_RCPP
}
// getCategoriesLocal
List getCategoriesLocal(signed int ind, arma::ivec numDate_, arma::vec numericalRating_, arma::ivec StartPos_, signed int sDate, signed int eDate);
RcppExport SEXP _RTransProb_getCategoriesLocal(SEXP indSEXP, SEXP numDate_SEXP, SEXP numericalRating_SEXP, SEXP StartPos_SEXP, SEXP sDateSEXP, SEXP eDateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< signed int >::type ind(indSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type numDate_(numDate_SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type numericalRating_(numericalRating_SEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type StartPos_(StartPos_SEXP);
    Rcpp::traits::input_parameter< signed int >::type sDate(sDateSEXP);
    Rcpp::traits::input_parameter< signed int >::type eDate(eDateSEXP);
    rcpp_result_gen = Rcpp::wrap(getCategoriesLocal(ind, numDate_, numericalRating_, StartPos_, sDate, eDate));
    return rcpp_result_gen;
END_RCPP
}
// getRatingsSnapshotsLocal
arma::vec getRatingsSnapshotsLocal(signed int ind, arma::ivec numDate_, arma::ivec numericalRating_, arma::ivec StartPos_, arma::ivec snapshotDates_);
RcppExport SEXP _RTransProb_getRatingsSnapshotsLocal(SEXP indSEXP, SEXP numDate_SEXP, SEXP numericalRating_SEXP, SEXP StartPos_SEXP, SEXP snapshotDates_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< signed int >::type ind(indSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type numDate_(numDate_SEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type numericalRating_(numericalRating_SEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type StartPos_(StartPos_SEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type snapshotDates_(snapshotDates_SEXP);
    rcpp_result_gen = Rcpp::wrap(getRatingsSnapshotsLocal(ind, numDate_, numericalRating_, StartPos_, snapshotDates_));
    return rcpp_result_gen;
END_RCPP
}
// getidTotCntCohortRCPP
List getidTotCntCohortRCPP(signed int nIDs, arma::ivec numDate, arma::ivec numericalRating, arma::ivec StartPos, arma::ivec snapshotDates, int nRtgsCatNaN);
RcppExport SEXP _RTransProb_getidTotCntCohortRCPP(SEXP nIDsSEXP, SEXP numDateSEXP, SEXP numericalRatingSEXP, SEXP StartPosSEXP, SEXP snapshotDatesSEXP, SEXP nRtgsCatNaNSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< signed int >::type nIDs(nIDsSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type numDate(numDateSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type numericalRating(numericalRatingSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type StartPos(StartPosSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type snapshotDates(snapshotDatesSEXP);
    Rcpp::traits::input_parameter< int >::type nRtgsCatNaN(nRtgsCatNaNSEXP);
    rcpp_result_gen = Rcpp::wrap(getidTotCntCohortRCPP(nIDs, numDate, numericalRating, StartPos, snapshotDates, nRtgsCatNaN));
    return rcpp_result_gen;
END_RCPP
}
// getidTotCntDurationRCPP
List getidTotCntDurationRCPP(signed int nIDs, arma::ivec numDate, arma::vec numericalRating, arma::ivec StartPos, int nRtgsCatNaN, String algo, signed int sDate, signed int eDate);
RcppExport SEXP _RTransProb_getidTotCntDurationRCPP(SEXP nIDsSEXP, SEXP numDateSEXP, SEXP numericalRatingSEXP, SEXP StartPosSEXP, SEXP nRtgsCatNaNSEXP, SEXP algoSEXP, SEXP sDateSEXP, SEXP eDateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< signed int >::type nIDs(nIDsSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type numDate(numDateSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type numericalRating(numericalRatingSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type StartPos(StartPosSEXP);
    Rcpp::traits::input_parameter< int >::type nRtgsCatNaN(nRtgsCatNaNSEXP);
    Rcpp::traits::input_parameter< String >::type algo(algoSEXP);
    Rcpp::traits::input_parameter< signed int >::type sDate(sDateSEXP);
    Rcpp::traits::input_parameter< signed int >::type eDate(eDateSEXP);
    rcpp_result_gen = Rcpp::wrap(getidTotCntDurationRCPP(nIDs, numDate, numericalRating, StartPos, nRtgsCatNaN, algo, sDate, eDate));
    return rcpp_result_gen;
END_RCPP
}
// getSampleTotals
List getSampleTotals(List lsttotals_totalsMat, List lsttotals_totalsVec, StringVector totals_methods, int sliceCnt, int rownum, int colnum);
RcppExport SEXP _RTransProb_getSampleTotals(SEXP lsttotals_totalsMatSEXP, SEXP lsttotals_totalsVecSEXP, SEXP totals_methodsSEXP, SEXP sliceCntSEXP, SEXP rownumSEXP, SEXP colnumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type lsttotals_totalsMat(lsttotals_totalsMatSEXP);
    Rcpp::traits::input_parameter< List >::type lsttotals_totalsVec(lsttotals_totalsVecSEXP);
    Rcpp::traits::input_parameter< StringVector >::type totals_methods(totals_methodsSEXP);
    Rcpp::traits::input_parameter< int >::type sliceCnt(sliceCntSEXP);
    Rcpp::traits::input_parameter< int >::type rownum(rownumSEXP);
    Rcpp::traits::input_parameter< int >::type colnum(colnumSEXP);
    rcpp_result_gen = Rcpp::wrap(getSampleTotals(lsttotals_totalsMat, lsttotals_totalsVec, totals_methods, sliceCnt, rownum, colnum));
    return rcpp_result_gen;
END_RCPP
}
// getExpandTransData
DataFrame getExpandTransData(StringVector industryName, StringVector Qtr_Year, DateVector endDate, StringVector Rating_Trans, StringVector start_Rating, StringVector end_rating, arma::vec mCount, StringVector wgtname, int transData_nm_cnt, double totalCountExpanded);
RcppExport SEXP _RTransProb_getExpandTransData(SEXP industryNameSEXP, SEXP Qtr_YearSEXP, SEXP endDateSEXP, SEXP Rating_TransSEXP, SEXP start_RatingSEXP, SEXP end_ratingSEXP, SEXP mCountSEXP, SEXP wgtnameSEXP, SEXP transData_nm_cntSEXP, SEXP totalCountExpandedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type industryName(industryNameSEXP);
    Rcpp::traits::input_parameter< StringVector >::type Qtr_Year(Qtr_YearSEXP);
    Rcpp::traits::input_parameter< DateVector >::type endDate(endDateSEXP);
    Rcpp::traits::input_parameter< StringVector >::type Rating_Trans(Rating_TransSEXP);
    Rcpp::traits::input_parameter< StringVector >::type start_Rating(start_RatingSEXP);
    Rcpp::traits::input_parameter< StringVector >::type end_rating(end_ratingSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mCount(mCountSEXP);
    Rcpp::traits::input_parameter< StringVector >::type wgtname(wgtnameSEXP);
    Rcpp::traits::input_parameter< int >::type transData_nm_cnt(transData_nm_cntSEXP);
    Rcpp::traits::input_parameter< double >::type totalCountExpanded(totalCountExpandedSEXP);
    rcpp_result_gen = Rcpp::wrap(getExpandTransData(industryName, Qtr_Year, endDate, Rating_Trans, start_Rating, end_rating, mCount, wgtname, transData_nm_cnt, totalCountExpanded));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RTransProb_getTransitionProbability", (DL_FUNC) &_RTransProb_getTransitionProbability, 5},
    {"_RTransProb_getTransitionProbabilityTNH", (DL_FUNC) &_RTransProb_getTransitionProbabilityTNH, 3},
    {"_RTransProb_getCategoriesLocal", (DL_FUNC) &_RTransProb_getCategoriesLocal, 6},
    {"_RTransProb_getRatingsSnapshotsLocal", (DL_FUNC) &_RTransProb_getRatingsSnapshotsLocal, 5},
    {"_RTransProb_getidTotCntCohortRCPP", (DL_FUNC) &_RTransProb_getidTotCntCohortRCPP, 6},
    {"_RTransProb_getidTotCntDurationRCPP", (DL_FUNC) &_RTransProb_getidTotCntDurationRCPP, 8},
    {"_RTransProb_getSampleTotals", (DL_FUNC) &_RTransProb_getSampleTotals, 6},
    {"_RTransProb_getExpandTransData", (DL_FUNC) &_RTransProb_getExpandTransData, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_RTransProb(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
